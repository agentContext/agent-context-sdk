/**
 * Agent App & Guide Public API
 * 基本地址：`/v1/`（已在 servers 配置） - 普通接口 **无鉴权** - 统一错误：`{\"error\":\"reason\"}` - 分页：`page` 默认 1，`limit` 默认 20 - `score` 为相似度（仅 /guide/search/{pkgname} 返回） 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GuideItemResponse from '../model/GuideItemResponse';
import GuideListResponse from '../model/GuideListResponse';
import GuideSearchResponse from '../model/GuideSearchResponse';

/**
* Guide service.
* @module api/GuideApi
* @version 1.0.0
*/
export default class GuideApi {

    /**
    * Constructs a new GuideApi. 
    * @alias module:api/GuideApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the guideGet operation.
     * @callback module:api/GuideApi~guideGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GuideListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取 guide 列表（按关键词）
     * @param {String} q 搜索关键词
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 页码（默认 1）
     * @param {Number} [limit = 20)] 每页数量（默认 20）
     * @param {module:api/GuideApi~guideGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GuideListResponse}
     */
    guideGet(q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling guideGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'q': q,
        'page': opts['page'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GuideListResponse;
      return this.apiClient.callApi(
        '/guide', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the guideIdIdGet operation.
     * @callback module:api/GuideApi~guideIdIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GuideItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取指定 guide（按 id）
     * @param {Number} id 
     * @param {module:api/GuideApi~guideIdIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GuideItemResponse}
     */
    guideIdIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling guideIdIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GuideItemResponse;
      return this.apiClient.callApi(
        '/guide/id/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the guidePkgPkgnameGet operation.
     * @callback module:api/GuideApi~guidePkgPkgnameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GuideListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取某包名下的 guide 列表
     * @param {String} pkgname 
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 页码（默认 1）
     * @param {Number} [limit = 20)] 每页数量（默认 20）
     * @param {module:api/GuideApi~guidePkgPkgnameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GuideListResponse}
     */
    guidePkgPkgnameGet(pkgname, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pkgname' is set
      if (pkgname === undefined || pkgname === null) {
        throw new Error("Missing the required parameter 'pkgname' when calling guidePkgPkgnameGet");
      }

      let pathParams = {
        'pkgname': pkgname
      };
      let queryParams = {
        'page': opts['page'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GuideListResponse;
      return this.apiClient.callApi(
        '/guide/pkg/{pkgname}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the guideSearchPkgnameGet operation.
     * @callback module:api/GuideApi~guideSearchPkgnameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GuideSearchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 在指定包下根据关键词搜索 guide（词向量相似度）
     * @param {String} pkgname 
     * @param {String} q 搜索关键词
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 页码（默认 1）
     * @param {Number} [limit = 20)] 每页数量（默认 20）
     * @param {module:api/GuideApi~guideSearchPkgnameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GuideSearchResponse}
     */
    guideSearchPkgnameGet(pkgname, q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pkgname' is set
      if (pkgname === undefined || pkgname === null) {
        throw new Error("Missing the required parameter 'pkgname' when calling guideSearchPkgnameGet");
      }
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling guideSearchPkgnameGet");
      }

      let pathParams = {
        'pkgname': pkgname
      };
      let queryParams = {
        'q': q,
        'page': opts['page'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GuideSearchResponse;
      return this.apiClient.callApi(
        '/guide/search/{pkgname}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
