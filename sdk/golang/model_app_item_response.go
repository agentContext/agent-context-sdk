/*
Agent App & Guide Public API

基本地址：`/v1/`（已在 servers 配置） - 普通接口 **无鉴权** - 统一错误：`{\"error\":\"reason\"}` - 分页：`page` 默认 1，`limit` 默认 20 - `score` 为相似度（仅 /guide/search/{pkgname} 返回） 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agent-context-sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppItemResponse{}

// AppItemResponse struct for AppItemResponse
type AppItemResponse struct {
	Data App `json:"data"`
}

type _AppItemResponse AppItemResponse

// NewAppItemResponse instantiates a new AppItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppItemResponse(data App) *AppItemResponse {
	this := AppItemResponse{}
	this.Data = data
	return &this
}

// NewAppItemResponseWithDefaults instantiates a new AppItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppItemResponseWithDefaults() *AppItemResponse {
	this := AppItemResponse{}
	return &this
}

// GetData returns the Data field value
func (o *AppItemResponse) GetData() App {
	if o == nil {
		var ret App
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AppItemResponse) GetDataOk() (*App, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AppItemResponse) SetData(v App) {
	o.Data = v
}

func (o AppItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *AppItemResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppItemResponse := _AppItemResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppItemResponse)

	if err != nil {
		return err
	}

	*o = AppItemResponse(varAppItemResponse)

	return err
}

type NullableAppItemResponse struct {
	value *AppItemResponse
	isSet bool
}

func (v NullableAppItemResponse) Get() *AppItemResponse {
	return v.value
}

func (v *NullableAppItemResponse) Set(val *AppItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppItemResponse(val *AppItemResponse) *NullableAppItemResponse {
	return &NullableAppItemResponse{value: val, isSet: true}
}

func (v NullableAppItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


