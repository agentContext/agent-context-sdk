/*
 * Agent App & Guide Public API
 * 基本地址：`/v1/`（已在 servers 配置） - 普通接口 **无鉴权** - 统一错误：`{\"error\":\"reason\"}` - 分页：`page` 默认 1，`limit` 默认 20 - `score` 为相似度（仅 /guide/search/{pkgname} 返回） 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AppItemResponse;
import org.openapitools.client.model.AppListResponse;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AppApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AppApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AppApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for appGet
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appGetCall(@javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/app";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appGetValidateBeforeCall(@javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback _callback) throws ApiException {
        return appGetCall(page, limit, _callback);

    }

    /**
     * 获取 app 列表
     * 
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @return AppListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public AppListResponse appGet(@javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit) throws ApiException {
        ApiResponse<AppListResponse> localVarResp = appGetWithHttpInfo(page, limit);
        return localVarResp.getData();
    }

    /**
     * 获取 app 列表
     * 
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @return ApiResponse&lt;AppListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppListResponse> appGetWithHttpInfo(@javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit) throws ApiException {
        okhttp3.Call localVarCall = appGetValidateBeforeCall(page, limit, null);
        Type localVarReturnType = new TypeToken<AppListResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取 app 列表 (asynchronously)
     * 
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appGetAsync(@javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback<AppListResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = appGetValidateBeforeCall(page, limit, _callback);
        Type localVarReturnType = new TypeToken<AppListResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appIdIdGet
     * @param id  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appIdIdGetCall(@javax.annotation.Nonnull Integer id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/app/id/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appIdIdGetValidateBeforeCall(@javax.annotation.Nonnull Integer id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling appIdIdGet(Async)");
        }

        return appIdIdGetCall(id, _callback);

    }

    /**
     * 获取指定 app 信息（按 id）
     * 
     * @param id  (required)
     * @return AppItemResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public AppItemResponse appIdIdGet(@javax.annotation.Nonnull Integer id) throws ApiException {
        ApiResponse<AppItemResponse> localVarResp = appIdIdGetWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取指定 app 信息（按 id）
     * 
     * @param id  (required)
     * @return ApiResponse&lt;AppItemResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppItemResponse> appIdIdGetWithHttpInfo(@javax.annotation.Nonnull Integer id) throws ApiException {
        okhttp3.Call localVarCall = appIdIdGetValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<AppItemResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定 app 信息（按 id） (asynchronously)
     * 
     * @param id  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appIdIdGetAsync(@javax.annotation.Nonnull Integer id, final ApiCallback<AppItemResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = appIdIdGetValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<AppItemResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appPkgPkgnameGet
     * @param pkgname  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appPkgPkgnameGetCall(@javax.annotation.Nonnull String pkgname, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/app/pkg/{pkgname}"
            .replace("{" + "pkgname" + "}", localVarApiClient.escapeString(pkgname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appPkgPkgnameGetValidateBeforeCall(@javax.annotation.Nonnull String pkgname, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pkgname' is set
        if (pkgname == null) {
            throw new ApiException("Missing the required parameter 'pkgname' when calling appPkgPkgnameGet(Async)");
        }

        return appPkgPkgnameGetCall(pkgname, _callback);

    }

    /**
     * 获取指定 app 信息（按包名）
     * 
     * @param pkgname  (required)
     * @return AppItemResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public AppItemResponse appPkgPkgnameGet(@javax.annotation.Nonnull String pkgname) throws ApiException {
        ApiResponse<AppItemResponse> localVarResp = appPkgPkgnameGetWithHttpInfo(pkgname);
        return localVarResp.getData();
    }

    /**
     * 获取指定 app 信息（按包名）
     * 
     * @param pkgname  (required)
     * @return ApiResponse&lt;AppItemResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppItemResponse> appPkgPkgnameGetWithHttpInfo(@javax.annotation.Nonnull String pkgname) throws ApiException {
        okhttp3.Call localVarCall = appPkgPkgnameGetValidateBeforeCall(pkgname, null);
        Type localVarReturnType = new TypeToken<AppItemResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定 app 信息（按包名） (asynchronously)
     * 
     * @param pkgname  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appPkgPkgnameGetAsync(@javax.annotation.Nonnull String pkgname, final ApiCallback<AppItemResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = appPkgPkgnameGetValidateBeforeCall(pkgname, _callback);
        Type localVarReturnType = new TypeToken<AppItemResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for appSearchGet
     * @param q 搜索关键词 (required)
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appSearchGetCall(@javax.annotation.Nonnull String q, @javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/app/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (q != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("q", q));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call appSearchGetValidateBeforeCall(@javax.annotation.Nonnull String q, @javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'q' is set
        if (q == null) {
            throw new ApiException("Missing the required parameter 'q' when calling appSearchGet(Async)");
        }

        return appSearchGetCall(q, page, limit, _callback);

    }

    /**
     * 搜索 app
     * 
     * @param q 搜索关键词 (required)
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @return AppListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public AppListResponse appSearchGet(@javax.annotation.Nonnull String q, @javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit) throws ApiException {
        ApiResponse<AppListResponse> localVarResp = appSearchGetWithHttpInfo(q, page, limit);
        return localVarResp.getData();
    }

    /**
     * 搜索 app
     * 
     * @param q 搜索关键词 (required)
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @return ApiResponse&lt;AppListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppListResponse> appSearchGetWithHttpInfo(@javax.annotation.Nonnull String q, @javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit) throws ApiException {
        okhttp3.Call localVarCall = appSearchGetValidateBeforeCall(q, page, limit, null);
        Type localVarReturnType = new TypeToken<AppListResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索 app (asynchronously)
     * 
     * @param q 搜索关键词 (required)
     * @param page 页码（默认 1） (optional, default to 1)
     * @param limit 每页数量（默认 20） (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 成功 </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 统一错误 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call appSearchGetAsync(@javax.annotation.Nonnull String q, @javax.annotation.Nullable Integer page, @javax.annotation.Nullable Integer limit, final ApiCallback<AppListResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = appSearchGetValidateBeforeCall(q, page, limit, _callback);
        Type localVarReturnType = new TypeToken<AppListResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
