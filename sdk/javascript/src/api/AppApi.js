/**
 * Agent App & Guide Public API
 * 基本地址：`/v1/`（已在 servers 配置） - 普通接口 **无鉴权** - 统一错误：`{\"error\":\"reason\"}` - 分页：`page` 默认 1，`limit` 默认 20 - `score` 为相似度（仅 /guide/search/{pkgname} 返回） 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppItemResponse from '../model/AppItemResponse';
import AppListResponse from '../model/AppListResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* App service.
* @module api/AppApi
* @version 1.0.0
*/
export default class AppApi {

    /**
    * Constructs a new AppApi. 
    * @alias module:api/AppApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appGet operation.
     * @callback module:api/AppApi~appGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取 app 列表
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 页码（默认 1）
     * @param {Number} [limit = 20)] 每页数量（默认 20）
     * @param {module:api/AppApi~appGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppListResponse}
     */
    appGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppListResponse;
      return this.apiClient.callApi(
        '/app', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appIdIdGet operation.
     * @callback module:api/AppApi~appIdIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取指定 app 信息（按 id）
     * @param {Number} id 
     * @param {module:api/AppApi~appIdIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppItemResponse}
     */
    appIdIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appIdIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppItemResponse;
      return this.apiClient.callApi(
        '/app/id/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPkgPkgnameGet operation.
     * @callback module:api/AppApi~appPkgPkgnameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取指定 app 信息（按包名）
     * @param {String} pkgname 
     * @param {module:api/AppApi~appPkgPkgnameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppItemResponse}
     */
    appPkgPkgnameGet(pkgname, callback) {
      let postBody = null;
      // verify the required parameter 'pkgname' is set
      if (pkgname === undefined || pkgname === null) {
        throw new Error("Missing the required parameter 'pkgname' when calling appPkgPkgnameGet");
      }

      let pathParams = {
        'pkgname': pkgname
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppItemResponse;
      return this.apiClient.callApi(
        '/app/pkg/{pkgname}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appSearchGet operation.
     * @callback module:api/AppApi~appSearchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 搜索 app
     * @param {String} q 搜索关键词
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 页码（默认 1）
     * @param {Number} [limit = 20)] 每页数量（默认 20）
     * @param {module:api/AppApi~appSearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppListResponse}
     */
    appSearchGet(q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling appSearchGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'q': q,
        'page': opts['page'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppListResponse;
      return this.apiClient.callApi(
        '/app/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
