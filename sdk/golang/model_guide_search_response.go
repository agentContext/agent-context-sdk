/*
Agent App & Guide Public API

基本地址：`/v1/`（已在 servers 配置） - 普通接口 **无鉴权** - 统一错误：`{\"error\":\"reason\"}` - 分页：`page` 默认 1，`limit` 默认 20 - `score` 为相似度（仅 /guide/search/{pkgname} 返回） 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GuideSearchResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuideSearchResponse{}

// GuideSearchResponse struct for GuideSearchResponse
type GuideSearchResponse struct {
	Data []Guide `json:"data"`
	Paging Paging `json:"paging"`
	// 与 data 同顺序的相似度分数
	Score []float32 `json:"score"`
}

type _GuideSearchResponse GuideSearchResponse

// NewGuideSearchResponse instantiates a new GuideSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuideSearchResponse(data []Guide, paging Paging, score []float32) *GuideSearchResponse {
	this := GuideSearchResponse{}
	this.Data = data
	this.Paging = paging
	this.Score = score
	return &this
}

// NewGuideSearchResponseWithDefaults instantiates a new GuideSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuideSearchResponseWithDefaults() *GuideSearchResponse {
	this := GuideSearchResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GuideSearchResponse) GetData() []Guide {
	if o == nil {
		var ret []Guide
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GuideSearchResponse) GetDataOk() ([]Guide, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GuideSearchResponse) SetData(v []Guide) {
	o.Data = v
}

// GetPaging returns the Paging field value
func (o *GuideSearchResponse) GetPaging() Paging {
	if o == nil {
		var ret Paging
		return ret
	}

	return o.Paging
}

// GetPagingOk returns a tuple with the Paging field value
// and a boolean to check if the value has been set.
func (o *GuideSearchResponse) GetPagingOk() (*Paging, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Paging, true
}

// SetPaging sets field value
func (o *GuideSearchResponse) SetPaging(v Paging) {
	o.Paging = v
}

// GetScore returns the Score field value
func (o *GuideSearchResponse) GetScore() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *GuideSearchResponse) GetScoreOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Score, true
}

// SetScore sets field value
func (o *GuideSearchResponse) SetScore(v []float32) {
	o.Score = v
}

func (o GuideSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuideSearchResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["paging"] = o.Paging
	toSerialize["score"] = o.Score
	return toSerialize, nil
}

func (o *GuideSearchResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"paging",
		"score",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGuideSearchResponse := _GuideSearchResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGuideSearchResponse)

	if err != nil {
		return err
	}

	*o = GuideSearchResponse(varGuideSearchResponse)

	return err
}

type NullableGuideSearchResponse struct {
	value *GuideSearchResponse
	isSet bool
}

func (v NullableGuideSearchResponse) Get() *GuideSearchResponse {
	return v.value
}

func (v *NullableGuideSearchResponse) Set(val *GuideSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGuideSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGuideSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuideSearchResponse(val *GuideSearchResponse) *NullableGuideSearchResponse {
	return &NullableGuideSearchResponse{value: val, isSet: true}
}

func (v NullableGuideSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuideSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


